Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o (exit)
/usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                              arm.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

adch_vals           0x8               arm.o
adcl_vals           0x8               arm.o
cur_adc_mux         0x1               arm.o

Discarded input sections

 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
 .text          0x00000000        0x0 arm.o
 .bss           0x00000000        0x0 arm.o
 .text.set_adc_port
                0x00000000       0x10 arm.o
 .text.setup_adc
                0x00000000       0x36 arm.o
 .text.set_default_duty_cycles
                0x00000000       0x32 arm.o
 .text.handle_query_pwm_command
                0x00000000        0x2 arm.o
 .text.parse_and_execute_command
                0x00000000      0x118 arm.o
 .text.handle_adc_ports_command
                0x00000000        0xa arm.o
 .text          0x00000000        0x0 usb_serial.o
 .text.usb_serial_available
                0x00000000       0x1a usb_serial.o
 .text.usb_serial_putchar_nowait
                0x00000000       0x40 usb_serial.o
 .text.usb_serial_write
                0x00000000      0x250 usb_serial.o
 .progmem.gcc_sw_table
                0x00000000       0x82 usb_serial.o
 .text.usb_serial_flush_output
                0x00000000       0x20 usb_serial.o
 .text.usb_serial_get_baud
                0x00000000       0x12 usb_serial.o
 .text.usb_serial_get_stopbits
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_get_paritytype
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_get_numbits
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_set_control
                0x00000000       0x5a usb_serial.o
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
LOAD arm.o
LOAD usb_serial.o
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x9ca
 *(.vectors)
 .vectors       0x00000000       0x98 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000098       0xed arm.o
 .progmem.data  0x00000185       0xc9 usb_serial.o
                0x0000024e                . = ALIGN (0x2)
                0x0000024e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000024e        0x0 linker stubs
 *(.trampolines*)
                0x0000024e                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000024e                __ctors_start = .
 *(.ctors)
                0x0000024e                __ctors_end = .
                0x0000024e                __dtors_start = .
 *(.dtors)
                0x0000024e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000024e        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
                0x0000024e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000024e        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000025a       0x1a /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
                0x0000025a                __do_copy_data
 .init4         0x00000274       0x10 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                0x00000274                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000284        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
 *(.init9)
 *(.text)
 .text          0x00000288        0x2 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
                0x00000288                __vector_22
                0x00000288                __vector_28
                0x00000288                __vector_1
                0x00000288                __vector_32
                0x00000288                __vector_34
                0x00000288                __vector_24
                0x00000288                __vector_12
                0x00000288                __bad_interrupt
                0x00000288                __vector_6
                0x00000288                __vector_31
                0x00000288                __vector_35
                0x00000288                __vector_3
                0x00000288                __vector_23
                0x00000288                __vector_30
                0x00000288                __vector_25
                0x00000288                __vector_13
                0x00000288                __vector_17
                0x00000288                __vector_19
                0x00000288                __vector_7
                0x00000288                __vector_27
                0x00000288                __vector_5
                0x00000288                __vector_33
                0x00000288                __vector_37
                0x00000288                __vector_4
                0x00000288                __vector_9
                0x00000288                __vector_2
                0x00000288                __vector_21
                0x00000288                __vector_15
                0x00000288                __vector_36
                0x00000288                __vector_29
                0x00000288                __vector_8
                0x00000288                __vector_26
                0x00000288                __vector_14
                0x00000288                __vector_16
                0x00000288                __vector_18
                0x00000288                __vector_20
                0x0000028a                . = ALIGN (0x2)
 *(.text.*)
 .text.setup_pwms
                0x0000028a       0x72 arm.o
                0x0000028a                setup_pwms
 .text.send_str
                0x000002fc       0x1a arm.o
                0x000002fc                send_str
 .text.handle_query_adc_command
                0x00000316       0x38 arm.o
                0x00000316                handle_query_adc_command
 .text.handle_pwm_ports_command
                0x0000034e        0xe arm.o
                0x0000034e                handle_pwm_ports_command
 .text.handle_ping_command
                0x0000035c       0x3c arm.o
                0x0000035c                handle_ping_command
 .text.handle_version_command
                0x00000398        0xa arm.o
                0x00000398                handle_version_command
 .text.handle_set_pwm_command
                0x000003a2       0x7e arm.o
                0x000003a2                handle_set_pwm_command
 .text.handle_command
                0x00000420       0x4e arm.o
                0x00000420                handle_command
 .text.recv_str
                0x0000046e       0x4c arm.o
                0x0000046e                recv_str
 .text.main     0x000004ba       0x92 arm.o
                0x000004ba                main
 .text.usb_init
                0x0000054c       0x32 usb_serial.o
                0x0000054c                usb_init
 .text.usb_configured
                0x0000057e        0x6 usb_serial.o
                0x0000057e                usb_configured
 .text.usb_serial_getchar
                0x00000584       0x3e usb_serial.o
                0x00000584                usb_serial_getchar
 .text.usb_serial_flush_input
                0x000005c2       0x26 usb_serial.o
                0x000005c2                usb_serial_flush_input
 .text.usb_serial_putchar
                0x000005e8       0x84 usb_serial.o
                0x000005e8                usb_serial_putchar
 .text.usb_serial_get_control
                0x0000066c        0x6 usb_serial.o
                0x0000066c                usb_serial_get_control
 .text.__vector_10
                0x00000672       0x76 usb_serial.o
                0x00000672                __vector_10
 .text.__vector_11
                0x000006e8      0x2de usb_serial.o
                0x000006e8                __vector_11
                0x000009c6                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000009c6        0x0 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
                0x000009c6                exit
                0x000009c6                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000009c6        0x4 /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000009ca                _etext = .

.data           0x00800100        0xc load address 0x000009ca
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x4 arm.o
 .data          0x00800104        0x7 usb_serial.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080010c                . = ALIGN (0x2)
 *fill*         0x0080010b        0x1 00
                0x0080010c                _edata = .
                0x0080010c                PROVIDE (__data_end, .)

.bss            0x0080010c       0x15
                0x0080010c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080010c        0x4 usb_serial.o
 *(.bss*)
 *(COMMON)
 COMMON         0x00800110       0x11 arm.o
                0x00800110                adch_vals
                0x00800118                adcl_vals
                0x00800120                cur_adc_mux
                0x00800121                PROVIDE (__bss_end, .)
                0x000009ca                __data_load_start = LOADADDR (.data)
                0x000009d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800121        0x0
                0x00800121                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800121                PROVIDE (__noinit_end, .)
                0x00800121                _end = .
                0x00800121                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x750
 *(.stab)
 .stab          0x00000000      0x750 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x138
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x98 arm.o
 .debug_aranges
                0x00000098       0xa0 usb_serial.o

.debug_pubnames
                0x00000000      0x344
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x19e arm.o
 .debug_pubnames
                0x0000019e      0x1a6 usb_serial.o

.debug_info     0x00000000      0xf7a
 *(.debug_info)
 .debug_info    0x00000000      0x6f2 arm.o
 .debug_info    0x000006f2      0x888 usb_serial.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x446
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x26b arm.o
 .debug_abbrev  0x0000026b      0x1db usb_serial.o

.debug_line     0x00000000     0x12c5
 *(.debug_line)
 .debug_line    0x00000000      0x710 arm.o
 .debug_line    0x00000710      0xbb5 usb_serial.o

.debug_frame    0x00000000      0x230
 *(.debug_frame)
 .debug_frame   0x00000000      0x110 arm.o
 .debug_frame   0x00000110      0x120 usb_serial.o

.debug_str      0x00000000      0x560
 *(.debug_str)
 .debug_str     0x00000000      0x222 arm.o
                                0x273 (size before relaxing)
 .debug_str     0x00000222      0x33e usb_serial.o
                                0x42e (size before relaxing)

.debug_loc      0x00000000      0xed2
 *(.debug_loc)
 .debug_loc     0x00000000      0x483 arm.o
 .debug_loc     0x00000483      0xa4f usb_serial.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(arm.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x140
 .debug_ranges  0x00000000       0x90 arm.o
 .debug_ranges  0x00000090       0xb0 usb_serial.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__bss_end                                         /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__data_load_start                                 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__data_start                                      /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_clear_bss.o)
                                                  usb_serial.o
                                                  arm.o
__do_copy_data                                    /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
                                                  usb_serial.o
                                                  arm.o
__heap_end                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__init                                            /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__stack                                           /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_1                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_10                                       usb_serial.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_11                                       usb_serial.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_12                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_13                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_14                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_15                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_16                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_17                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_18                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_19                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_2                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_20                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_21                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_22                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_23                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_24                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_25                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_26                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_27                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_28                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_29                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_3                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_30                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_31                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_32                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_33                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_34                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_35                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_36                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_37                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_4                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_5                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_6                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_7                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_8                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_9                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vector_default                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
__vectors                                         /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
_exit                                             /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
adch_vals                                         arm.o
adcl_vals                                         arm.o
cur_adc_mux                                       arm.o
exit                                              /usr/lib/gcc/avr/4.3.4/avr51/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
handle_adc_ports_command                          arm.o
handle_command                                    arm.o
handle_ping_command                               arm.o
handle_pwm_ports_command                          arm.o
handle_query_adc_command                          arm.o
handle_query_pwm_command                          arm.o
handle_set_pwm_command                            arm.o
handle_version_command                            arm.o
main                                              arm.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr51/crtusb1286.o
parse_and_execute_command                         arm.o
recv_str                                          arm.o
send_str                                          arm.o
set_adc_port                                      arm.o
set_default_duty_cycles                           arm.o
setup_adc                                         arm.o
setup_pwms                                        arm.o
usb_configured                                    usb_serial.o
                                                  arm.o
usb_init                                          usb_serial.o
                                                  arm.o
usb_serial_available                              usb_serial.o
usb_serial_flush_input                            usb_serial.o
                                                  arm.o
usb_serial_flush_output                           usb_serial.o
usb_serial_get_baud                               usb_serial.o
usb_serial_get_control                            usb_serial.o
                                                  arm.o
usb_serial_get_numbits                            usb_serial.o
usb_serial_get_paritytype                         usb_serial.o
usb_serial_get_stopbits                           usb_serial.o
usb_serial_getchar                                usb_serial.o
                                                  arm.o
usb_serial_putchar                                usb_serial.o
                                                  arm.o
usb_serial_putchar_nowait                         usb_serial.o
usb_serial_set_control                            usb_serial.o
usb_serial_write                                  usb_serial.o
