Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              lightctl.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              lightctl.o (__do_clear_bss)

Discarded input sections

 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
 .text          0x00000000        0x0 lightctl.o
 .data          0x00000000        0x0 lightctl.o
 .bss           0x00000000        0x0 lightctl.o
 .text.set_default_duty_cycles
                0x00000000       0x3e lightctl.o
 .text.send_str
                0x00000000       0x1c lightctl.o
 .text.parse_and_execute_command
                0x00000000      0x118 lightctl.o
 .text.handle_pwm_ports_command
                0x00000000       0x16 lightctl.o
 .text.handle_ping_command
                0x00000000       0x42 lightctl.o
 .text.handle_version_command
                0x00000000       0x10 lightctl.o
 .text.handle_set_pwm_command
                0x00000000       0xb0 lightctl.o
 .text.recv_str
                0x00000000       0x52 lightctl.o
 .text.handle_sensor_query
                0x00000000      0x55c lightctl.o
 .text.handle_command
                0x00000000       0x54 lightctl.o
 .progmem.data  0x00000000       0xe9 lightctl.o
 .text          0x00000000        0x0 usb_serial.o
 .text.usb_init
                0x00000000       0x32 usb_serial.o
 .text.usb_configured
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_getchar
                0x00000000       0x3e usb_serial.o
 .text.usb_serial_available
                0x00000000       0x1a usb_serial.o
 .text.usb_serial_flush_input
                0x00000000       0x26 usb_serial.o
 .text.usb_serial_putchar
                0x00000000       0x84 usb_serial.o
 .text.usb_serial_putchar_nowait
                0x00000000       0x40 usb_serial.o
 .text.usb_serial_write
                0x00000000      0x250 usb_serial.o
 .progmem.gcc_sw_table
                0x00000000       0x82 usb_serial.o
 .text.usb_serial_flush_output
                0x00000000       0x20 usb_serial.o
 .text.usb_serial_get_baud
                0x00000000       0x12 usb_serial.o
 .text.usb_serial_get_stopbits
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_get_paritytype
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_get_numbits
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_get_control
                0x00000000        0x6 usb_serial.o
 .text.usb_serial_set_control
                0x00000000       0x5a usb_serial.o
 .text          0x00000000        0x0 sampling.o
 .data          0x00000000        0x0 sampling.o
 .text.adc_available
                0x00000000       0x16 sampling.o
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
LOAD lightctl.o
LOAD usb_serial.o
LOAD sampling.o
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x6d0
 *(.vectors)
 .vectors       0x00000000       0xac /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000ac       0xc9 usb_serial.o
                0x00000176                . = ALIGN (0x2)
 *fill*         0x00000175        0x1 00
                0x00000176                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000176        0x0 linker stubs
 *(.trampolines*)
                0x00000176                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000176                __ctors_start = .
 *(.ctors)
                0x00000176                __ctors_end = .
                0x00000176                __dtors_start = .
 *(.dtors)
                0x00000176                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000176        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
                0x00000176                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000176        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000182       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00000182                __do_copy_data
 .init4         0x00000198       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00000198                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000001a8        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x000001ac        0x2 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
                0x000001ac                __vector_38
                0x000001ac                __vector_22
                0x000001ac                __vector_28
                0x000001ac                __vector_1
                0x000001ac                __vector_32
                0x000001ac                __vector_34
                0x000001ac                __vector_24
                0x000001ac                __vector_12
                0x000001ac                __bad_interrupt
                0x000001ac                __vector_6
                0x000001ac                __vector_31
                0x000001ac                __vector_35
                0x000001ac                __vector_39
                0x000001ac                __vector_3
                0x000001ac                __vector_23
                0x000001ac                __vector_30
                0x000001ac                __vector_25
                0x000001ac                __vector_13
                0x000001ac                __vector_17
                0x000001ac                __vector_19
                0x000001ac                __vector_7
                0x000001ac                __vector_41
                0x000001ac                __vector_27
                0x000001ac                __vector_5
                0x000001ac                __vector_33
                0x000001ac                __vector_37
                0x000001ac                __vector_4
                0x000001ac                __vector_9
                0x000001ac                __vector_2
                0x000001ac                __vector_21
                0x000001ac                __vector_15
                0x000001ac                __vector_36
                0x000001ac                __vector_40
                0x000001ac                __vector_8
                0x000001ac                __vector_26
                0x000001ac                __vector_14
                0x000001ac                __vector_16
                0x000001ac                __vector_18
                0x000001ac                __vector_20
                0x000001ac                __vector_42
                0x000001ae                . = ALIGN (0x2)
 *(.text.*)
 .text.setup_pwms
                0x000001ae       0x3a lightctl.o
                0x000001ae                setup_pwms
 .text.sensor_display
                0x000001e8       0xd2 lightctl.o
                0x000001e8                sensor_display
 .text.main     0x000002ba       0x12 lightctl.o
                0x000002ba                main
 .text.__vector_10
                0x000002cc       0x76 usb_serial.o
                0x000002cc                __vector_10
 .text.__vector_11
                0x00000342      0x2d6 usb_serial.o
                0x00000342                __vector_11
 .text.adc_start
                0x00000618       0x2a sampling.o
                0x00000618                adc_start
 .text.adc_read
                0x00000642       0x2e sampling.o
                0x00000642                adc_read
 .text.__vector_29
                0x00000670       0x5c sampling.o
                0x00000670                __vector_29
                0x000006cc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000006cc        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x000006cc                exit
                0x000006cc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000006cc        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000006d0                _etext = .

.data           0x00800100        0x8 load address 0x000006d0
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x7 usb_serial.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800108                . = ALIGN (0x2)
 *fill*         0x00800107        0x1 00
                0x00800108                _edata = .
                0x00800108                PROVIDE (__data_end, .)

.bss            0x00800108        0xa
                0x00800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800108        0x4 usb_serial.o
 .bss           0x0080010c        0x6 sampling.o
 *(.bss*)
 *(COMMON)
                0x00800112                PROVIDE (__bss_end, .)
                0x000006d0                __data_load_start = LOADADDR (.data)
                0x000006d8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800112        0x0
                0x00800112                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800112                PROVIDE (__noinit_end, .)
                0x00800112                _end = .
                0x00800112                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6b4
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000      0x158
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x80 lightctl.o
 .debug_aranges
                0x00000080       0xa0 usb_serial.o
 .debug_aranges
                0x00000120       0x38 sampling.o

.debug_pubnames
                0x00000000      0x31c
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x127 lightctl.o
 .debug_pubnames
                0x00000127      0x1a6 usb_serial.o
 .debug_pubnames
                0x000002cd       0x4f sampling.o

.debug_info     0x00000000     0x1227
 *(.debug_info)
 .debug_info    0x00000000      0x7f3 lightctl.o
 .debug_info    0x000007f3      0x888 usb_serial.o
 .debug_info    0x0000107b      0x1ac sampling.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x4da
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x21c lightctl.o
 .debug_abbrev  0x0000021c      0x1db usb_serial.o
 .debug_abbrev  0x000003f7       0xe3 sampling.o

.debug_line     0x00000000     0x17f8
 *(.debug_line)
 .debug_line    0x00000000      0xa9f lightctl.o
 .debug_line    0x00000a9f      0xbb5 usb_serial.o
 .debug_line    0x00001654      0x1a4 sampling.o

.debug_frame    0x00000000      0x250
 *(.debug_frame)
 .debug_frame   0x00000000       0xe0 lightctl.o
 .debug_frame   0x000000e0      0x120 usb_serial.o
 .debug_frame   0x00000200       0x50 sampling.o

.debug_str      0x00000000      0x551
 *(.debug_str)
 .debug_str     0x00000000      0x1cc lightctl.o
                                0x218 (size before relaxing)
 .debug_str     0x000001cc      0x33e usb_serial.o
                                0x429 (size before relaxing)
 .debug_str     0x0000050a       0x47 sampling.o
                                 0xf9 (size before relaxing)

.debug_loc      0x00000000     0x1244
 *(.debug_loc)
 .debug_loc     0x00000000      0x773 lightctl.o
 .debug_loc     0x00000773      0xa4f usb_serial.o
 .debug_loc     0x000011c2       0x82 sampling.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(lightctl.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000      0x158
 .debug_ranges  0x00000000       0x78 lightctl.o
 .debug_ranges  0x00000078       0xb0 usb_serial.o
 .debug_ranges  0x00000128       0x30 sampling.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__bss_end                                         /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                                                  sampling.o
                                                  usb_serial.o
                                                  lightctl.o
__do_copy_data                                    /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                                                  sampling.o
                                                  usb_serial.o
                                                  lightctl.o
__heap_end                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__init                                            /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__stack                                           /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_1                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_10                                       usb_serial.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_11                                       usb_serial.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_12                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_13                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_14                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_15                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_16                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_17                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_18                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_19                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_2                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_20                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_21                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_22                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_23                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_24                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_25                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_26                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_27                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_28                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_29                                       sampling.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_3                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_30                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_31                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_32                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_33                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_34                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_35                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_36                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_37                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_38                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_39                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_4                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_40                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_41                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_42                                       /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_5                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_6                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_7                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_8                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_9                                        /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vector_default                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
__vectors                                         /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
_exit                                             /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
adc_available                                     sampling.o
adc_read                                          sampling.o
                                                  lightctl.o
adc_start                                         sampling.o
                                                  lightctl.o
exit                                              /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
handle_command                                    lightctl.o
handle_ping_command                               lightctl.o
handle_pwm_ports_command                          lightctl.o
handle_sensor_query                               lightctl.o
handle_set_pwm_command                            lightctl.o
handle_version_command                            lightctl.o
main                                              lightctl.o
                                                  /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm32u4.o
parse_and_execute_command                         lightctl.o
recv_str                                          lightctl.o
send_str                                          lightctl.o
sensor_display                                    lightctl.o
set_default_duty_cycles                           lightctl.o
setup_pwms                                        lightctl.o
usb_configured                                    usb_serial.o
                                                  lightctl.o
usb_init                                          usb_serial.o
usb_serial_available                              usb_serial.o
usb_serial_flush_input                            usb_serial.o
usb_serial_flush_output                           usb_serial.o
usb_serial_get_baud                               usb_serial.o
usb_serial_get_control                            usb_serial.o
                                                  lightctl.o
usb_serial_get_numbits                            usb_serial.o
usb_serial_get_paritytype                         usb_serial.o
usb_serial_get_stopbits                           usb_serial.o
usb_serial_getchar                                usb_serial.o
                                                  lightctl.o
usb_serial_putchar                                usb_serial.o
                                                  lightctl.o
usb_serial_putchar_nowait                         usb_serial.o
usb_serial_set_control                            usb_serial.o
usb_serial_write                                  usb_serial.o
                                                  lightctl.o
